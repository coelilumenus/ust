{"version":3,"sources":["redux/actions.ts","redux/reducers.ts","redux/store.ts","pages/Login.tsx","pages/Profile.tsx","utils/ProtectedRoute.tsx","App.tsx","index.tsx"],"names":["auth","value","type","data","admin","login","password","store","configureStore","reducer","state","action","Login","React","useState","setInputLogin","setInputPass","history","useHistory","isDisabled","getState","Container","className","Form","FormGroup","Label","for","Input","name","id","onChange","e","dispatch","currentTarget","handleLogin","handlePassword","Button","disabled","onClick","push","Profile","Jumbotron","ProtectedRoute","isAuth","routeProps","to","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAAaA,EAAO,SAACC,GAAD,MAAoB,CAACC,KAAM,OAAQD,U,gBCGjDE,EAAI,UAAMC,IAAMC,MAAZ,YAAqBD,IAAME,UCAxBC,EAAQC,YAAe,CAClCC,QAAS,CACPT,KDAgC,WAA4B,IAA3BU,EAA0B,wDAAXC,EAAW,uCAC7D,MACO,SADCA,EAAOT,KAEKC,IAASQ,EAAOV,MAEzBS,GCJTL,MDQiC,WAAyB,IAAxBK,EAAuB,uDAAf,GAAIC,EAAW,uCAC3D,MACO,aADCA,EAAOT,KAEIS,EAAOV,MAEfS,M,OEbAE,EAAkB,WAC7B,MAA+BC,IAAMC,SAAS,IAA9C,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAAiCF,IAAMC,SAAS,IAAhD,mBAAOR,EAAP,KAAiBU,EAAjB,KACMC,EAAUC,cACVC,GAAuBZ,EAAMa,WAAWpB,KAiB9C,OAAO,cAACqB,EAAA,EAAD,CAAWC,UAAU,0DAArB,SACL,eAACC,EAAA,EAAD,CAAMD,UAAU,OAAhB,UACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,EAAA,EAAD,CACEzB,KAAK,OACL0B,KAAK,QACLC,GAAG,QACH5B,MAAOI,EACPyB,SAAU,SAACC,GAAD,OAnBE,SAACA,GACnBxB,EAAMyB,SAAShC,EAAK,GAAD,OAAI+B,EAAEE,cAAchC,MAApB,YAA6BK,KAChDS,EAAcgB,EAAEE,cAAchC,OAiBPiC,CAAYH,SAGjC,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,sBACA,cAACC,EAAA,EAAD,CACEzB,KAAK,WACL0B,KAAK,WACLC,GAAG,WACH5B,MAAOK,EACPwB,SAAU,SAACC,GAAD,OAxBK,SAACA,GACtBxB,EAAMyB,SAAShC,EAAK,GAAD,OAAIK,EAAJ,YAAa0B,EAAEE,cAAchC,SAChDe,EAAae,EAAEE,cAAchC,OAsBNkC,CAAeJ,SAGpC,cAACK,EAAA,EAAD,CACEC,SAAUlB,EACVG,UAAU,OACVgB,QAxCa,WACjB/B,EAAMyB,SHZkC,CAAC9B,KAAM,WAAYD,MGYnCI,IACxBY,EAAQsB,KAAK,aAmCX,0B,QC7COC,EAAoB,WAC/B,OAAO,cAACnB,EAAA,EAAD,CAAWC,UAAU,uCAArB,SACL,cAACmB,EAAA,EAAD,CAAWnB,UAAU,OAArB,SACE,oBAAIA,UAAU,YAAd,SAA2Bf,EAAMa,WAAWf,a,6BCArCqC,EAAkC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAWC,EAAiB,iBAC5E,OAAID,EACK,cAAC,IAAD,eAAWC,IAGb,cAAC,IAAD,CAAUC,GAAG,WCLTC,EAAgB,WAC3B,IAAMH,GAAmBpC,EAAMa,WAAWpB,KAE1C,OAAO,cAAC,IAAD,UACL,eAAC,IAAD,WACE,cAAC,EAAD,CAAgB2C,OAAQA,EAAQI,KAAK,WAAWC,UAAW,kBAAM,cAAC,EAAD,OACjE,cAAC,IAAD,CAAOD,KAAK,QAAQC,UAAW,kBAAM,cAAC,EAAD,KAAWC,OAAK,U,cCN3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU7C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ8C,SAASC,eAAe,W","file":"static/js/main.595f309e.chunk.js","sourcesContent":["export const auth = (value: string) => ({type: 'auth', value})\r\nexport const setLogin = (value: string) => ({type: 'setLogin', value})","import { Reducer } from \"redux\"\r\nimport { admin } from \"../data/data.json\"\r\n\r\nconst data = `${admin.login}:${admin.password}`\r\n\r\nexport const authReducer: Reducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'auth':\r\n      return state = (data === action.value) ? true : false\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nexport const loginReducer: Reducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'setLogin':\r\n      return state = action.value\r\n    default:\r\n      return state\r\n  }\r\n}","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { authReducer, loginReducer } from './reducers';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    login: loginReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Container, Button, Form, FormGroup, Label, Input } from \"reactstrap\"\r\nimport { auth, setLogin } from \"../redux/actions\"\r\nimport { store } from \"../redux/store\"\r\n\r\nexport const Login: React.FC = () => {\r\n  const [login, setInputLogin] = React.useState('')\r\n  const [password, setInputPass] = React.useState('')\r\n  const history = useHistory()\r\n  const isDisabled: boolean = !store.getState().auth\r\n\r\n  const handleAuth = () => {\r\n    store.dispatch(setLogin(login))\r\n    history.push('/profile')\r\n  }\r\n\r\n  const handleLogin = (e: React.FormEvent<HTMLInputElement>) => {\r\n    store.dispatch(auth(`${e.currentTarget.value}:${password}`))\r\n    setInputLogin(e.currentTarget.value)\r\n  }\r\n  \r\n  const handlePassword = (e: React.FormEvent<HTMLInputElement>) => {\r\n    store.dispatch(auth(`${login}:${e.currentTarget.value}`))\r\n    setInputPass(e.currentTarget.value)\r\n  }\r\n\r\n  return <Container className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n    <Form className=\"w-50\">\r\n      <FormGroup>\r\n        <Label for=\"login\">Login</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"login\"\r\n          id=\"login\"\r\n          value={login}\r\n          onChange={(e) => handleLogin(e)}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"password\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => handlePassword(e)}\r\n        />\r\n      </FormGroup>\r\n      <Button\r\n        disabled={isDisabled}\r\n        className=\"mt-3\"\r\n        onClick={handleAuth}\r\n      >Submit</Button>\r\n    </Form>\r\n  </Container>\r\n}","import React from \"react\";\r\nimport { Container, Jumbotron } from \"reactstrap\";\r\nimport { store } from \"../redux/store\";\r\n\r\nexport const Profile: React.FC = () => {\r\n  return <Container className=\"vh-100 d-flex justify-content-center\">\r\n    <Jumbotron className=\"w-50\">\r\n      <h1 className=\"display-3\">{store.getState().login}</h1>\r\n    </Jumbotron>\r\n  </Container>\r\n}","import React from \"react\"\r\nimport { Redirect, Route, RouteProps } from \"react-router\"\r\n\r\ninterface Props extends RouteProps {\r\n  isAuth: boolean\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<Props> = ({ isAuth, ...routeProps }) => {\r\n  if (isAuth) {\r\n    return <Route {...routeProps} />\r\n  }\r\n\r\n  return <Redirect to=\"/ust/\" />\r\n}","import React from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport { Login } from \"./pages/Login\"\r\nimport { Profile } from \"./pages/Profile\"\r\nimport { store } from \"./redux/store\"\r\nimport { ProtectedRoute } from \"./utils/ProtectedRoute\"\r\n\r\nexport const App: React.FC = () => {\r\n  const isAuth: boolean = !store.getState().auth\r\n  \r\n  return <Router>\r\n    <Switch>\r\n      <ProtectedRoute isAuth={isAuth} path=\"/profile\" component={() => <Profile />} />\r\n      <Route path=\"/ust/\" component={() => <Login />} exact />\r\n    </Switch>\r\n  </Router>\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}